---
layout:     post
title:      "简约tensorflow第一节：基本概念"
subtitle:   "信息、载体、抽象、UI 设计乱谈"
date:       2017-01-17
author:     "Hux"
header-img: "img/post-bg-os-metro.jpg"
catalog: true
tags:
    - hUX 随想录
    - UX Design
    - Windows
    - Metro
    - OS
---






简约tensorflow第一节：基本概念



![Alt text](./tensorflow_nutshell-1-432x270.png)
TensorFlow In a Nutshell 是我见过的最简洁的入门系列。按它自己的说法：

The fast and easy guide to the most popular Deep Learning framework in the world

原博链接在这里: http://camron.xyz/index.php/2016/08/22/in_a_nutshell_part_one/

安好后，简单的计算功能就能实现了

```python
>>> import tensorflow as tf

>>> tf.add(1, 2)
#3

>>> tf.sub(2, 1)
# 1

>>> tf.mul(2, 2)
# 4

>>> tf.div(2, 2)
# 1

>>> tf.pow(3, 2)
# 9
```   
![enter image description here](https://d262ilb51hltx0.cloudfront.net/max/1600/1*mvhm5_r6LY-eHsin21RJTg.png)
这是一个简单的示例，演示如何创建图形（graph）并运行会话（session）。这个会话运行会产生三个操作，创建两个常数，然后矩阵乘法。
tensorflow正如其名字所叫的，产生张量（数据），让其流动（做运算）。

接下来说说tensorflow的基本概念：

图（Graph）

在tensorflow中我们创建的常量和操作都会自动添加到图上。图通常是默认创建的，当要在一个文件中创建多个模型，且彼此不相关时，可以自己创建图，而不使用默认的图。

```python
new_graph = tf.Graph()
```
```python
with new_graph.as_default():
	 new_g_const = tf.constant([1., 2.])
```
在newgraph.asdefault() 之外的变量和操作会被添加到默认的图中。
默认的图也可以操作，像这样：

```python
default_g = tf.get_default_graph()
```

大多数情况下默认的图就足够用了。


会话（Session）
TensorFlow中有两种Session对象

tf.Session()
这种会话对操作和张量的执行环境进行了封装。它们会被分配专门的队列和变量，会话结束后需要及时关闭（close）。
有三个参数，都是可选的：
1.target — 要连接到哪个执行引擎
2.graph — 由哪个图发起
3.config — 相关配置
TensorFlow每做一步运算，这个函数和其依赖的图都会被执行。

tf.InteractiveSession()
这是为了方便互动专门给IPython 和 Jupyter Notebooks设计的， 让你可以使用Tensor.eval() 和 Operation.run() 计算结果，而不是必须用Session.run()

```python
sess = tf.InteractiveSession()
a = tf.constant(1)
b = tf.constant(2)
c = a + b
# instead of sess.run(c)
c.eval()
```


变量（Variables）


域（Scope）
跟TensorBoard一起用会比较有用





